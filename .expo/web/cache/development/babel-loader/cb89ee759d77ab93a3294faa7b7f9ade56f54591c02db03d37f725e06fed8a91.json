{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Camera } from \"expo-camera\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function CameraScreen() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    hasPermission = _useState2[0],\n    setHasPermission = _useState2[1];\n  var _useState3 = useState(Camera.Constants.Type.back),\n    _useState4 = _slicedToArray(_useState3, 2),\n    type = _useState4[0],\n    setType = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    capturedImage = _useState6[0],\n    setCapturedImage = _useState6[1];\n  var cameraRef = useRef(null);\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      var _yield$Camera$request = yield Camera.requestPermissionsAsync(),\n        status = _yield$Camera$request.status;\n      setHasPermission(status === \"granted\");\n    })();\n  }, []);\n  var takePicture = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (cameraRef) {\n        var photo = yield cameraRef.takePictureAsync();\n        setCapturedImage(photo.uri);\n      }\n    });\n    return function takePicture() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var pickImage = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images\n      });\n      if (!result.cancelled) {\n        setCapturedImage(result.uri);\n      }\n    });\n    return function pickImage() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(Camera, {\n      style: {\n        flex: 1\n      },\n      type: type,\n      ref: function ref(_ref4) {\n        return _ref4, _readOnlyError(\"cameraRef\");\n      },\n      children: _jsx(View, {\n        style: {\n          flex: 1,\n          backgroundColor: \"transparent\",\n          flexDirection: \"row\"\n        },\n        children: _jsx(TouchableOpacity, {\n          style: {\n            flex: 0.1,\n            alignSelf: \"flex-end\",\n            alignItems: \"center\"\n          },\n          onPress: function onPress() {\n            setType(type === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back);\n          },\n          children: _jsx(Text, {\n            style: {\n              fontSize: 18,\n              marginBottom: 10,\n              color: \"white\"\n            },\n            children: \"Flip\"\n          })\n        })\n      })\n    }), _jsxs(View, {\n      children: [_jsx(TouchableOpacity, {\n        onPress: takePicture,\n        children: _jsx(Text, {\n          children: \"Take Photo\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: pickImage,\n        children: _jsx(Text, {\n          children: \"Pick from Gallery\"\n        })\n      }), capturedImage && _jsx(Image, {\n        source: {\n          uri: capturedImage\n        },\n        style: {\n          width: 200,\n          height: 200\n        }\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","View","Text","TouchableOpacity","Image","Camera","ImagePicker","jsx","_jsx","jsxs","_jsxs","CameraScreen","_useState","_useState2","_slicedToArray","hasPermission","setHasPermission","_useState3","Constants","Type","back","_useState4","type","setType","_useState5","_useState6","capturedImage","setCapturedImage","cameraRef","useRef","_asyncToGenerator","_yield$Camera$request","requestPermissionsAsync","status","takePicture","_ref2","photo","takePictureAsync","uri","apply","arguments","pickImage","_ref3","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","cancelled","style","flex","children","ref","_readOnlyError","backgroundColor","flexDirection","alignSelf","alignItems","onPress","front","fontSize","marginBottom","color","source","width","height"],"sources":["/home/abuessa/lab41/lab41/components/CameraScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, Text, TouchableOpacity, Image } from \"react-native\";\nimport { Camera } from \"expo-camera\";\nimport * as ImagePicker from \"expo-image-picker\";\n\nexport default function CameraScreen() {\n  const [hasPermission, setHasPermission] = useState(null);\n  const [type, setType] = useState(Camera.Constants.Type.back);\n  const [capturedImage, setCapturedImage] = useState(null);\n  const cameraRef = useRef(null);\n  useEffect(() => {\n    (async () => {\n      const { status } = await Camera.requestPermissionsAsync();\n      setHasPermission(status === \"granted\");\n    })();\n  }, []);\n\n  const takePicture = async () => {\n    if (cameraRef) {\n      const photo = await cameraRef.takePictureAsync();\n      setCapturedImage(photo.uri);\n    }\n  };\n\n  const pickImage = async () => {\n    const result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n    });\n\n    if (!result.cancelled) {\n      setCapturedImage(result.uri);\n    }\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Camera style={{ flex: 1 }} type={type} ref={(ref) => (cameraRef = ref)}>\n        <View\n          style={{\n            flex: 1,\n            backgroundColor: \"transparent\",\n            flexDirection: \"row\",\n          }}\n        >\n          <TouchableOpacity\n            style={{\n              flex: 0.1,\n              alignSelf: \"flex-end\",\n              alignItems: \"center\",\n            }}\n            onPress={() => {\n              setType(\n                type === Camera.Constants.Type.back\n                  ? Camera.Constants.Type.front\n                  : Camera.Constants.Type.back\n              );\n            }}\n          >\n            <Text style={{ fontSize: 18, marginBottom: 10, color: \"white\" }}>\n              Flip\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </Camera>\n      <View>\n        <TouchableOpacity onPress={takePicture}>\n          <Text>Take Photo</Text>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={pickImage}>\n          <Text>Pick from Gallery</Text>\n        </TouchableOpacity>\n        {capturedImage && (\n          <Image\n            source={{ uri: capturedImage }}\n            style={{ width: 200, height: 200 }}\n          />\n        )}\n      </View>\n    </View>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}